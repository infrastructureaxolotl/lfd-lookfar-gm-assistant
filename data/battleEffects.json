{
    "element": [
        {
            "item": "Fire"
        },
        {
            "item": "Water"
        },
        {
            "item": "Earth"
        },
        {
            "item": "Air"
        },
        {
            "item": "Bolt"
        },
        {
            "item": "Ice"
        },
        {
            "item": "Light"
        },
        {
            "item": "Dark"
        }
    ],
    "actions": [
        {
            "item": "Attack"
        },
        {
            "item": "Guard"
        },
        {
            "item": "Spell"
        },
        {
            "item": "Equipment"
        },
        {
            "item": "Objective"
        },
        {
            "item": "Hinder"
        },
        {
            "item": "Inventory"
        },
        {
            "item": "Study"
        },
        {
            "item": "Skill"
        }
    ],
    "gimmick": [
        {
            "item": "Defenders: Choose 1 or 2 enemies, or create a Clock - PCs cannot target other enemies until they are dealt with."
        },
        {
            "item": "Waves: Any time a group of enemies is defeated, it is replaced by another enemy group at the end of the round. This occurs condition until a condition is met, or a target is met. The goal is for players to make interesting decisions about when to defeat an enemy or not. Adjust difficulty or allow Rest between rounds."
        },
        {
            "item": "Reinforcements: At the end of each round, a new enemy appears to replace any that were defeated. This occurs until a condition is met, or a target is met. They should be lower level than usual. The goal is for players to manage enemies while accomplish some other objective that will stop further reinforcements."
        },
        {
            "item": "Sequence: The PCs must perform actions or damage types in a specific order to defeat an enemy or disable their most powerful abilities. Choose 2-3 Elements like Fire > Ice > Fire, or Actions that make sense like Guard > Attack > Spell."
        },
        {
            "item": "Action Immunity: The PCs cannot use a specific action type against an enemy, or the enemy can only be made vulnerable by using a specific Action. This can be used to force players to use different tactics, or to make a specific enemy more difficult."
        },
        {
            "item": "Higher Vantage Point: The PCs are above the enemies. For the duration of the combat, PCs count as Flying. If a PC loses Flying, they take {threats.damage.level} damage and cannot gain Flying without a Skill Action etc."
        },
        {
            "item": "'Attack from Above:' The enemies are attacking from above! For the duration of the battle, select one or more enemies to gain Flying. If an enemy loses flying, they take {threats.damage.level} damage and cannot gain Flying again."
        },
        {
            "item": "Stand Behind Me: At the start of each round, the group nominates one player to gain use of the Protect Skill (Guardian) for that round. This represents some object or terrain feature."
        }
    ],
    "target": [
        "PCs",
        "Enemies",
        "All creatures"
    ],
    "environment": [
        {
            "item": "{target} gains {element}: RES and {element}: VUL."
        },
        {
            "item": "At the end of each round, the environment deals {threats.damage.level} {element} damage to {target}."
        },
        {
            "item": "At the end of each round, {target} become {statusEffects}."
        },
        {
            "item": "At the end of each round, {target} lose {threats.damage.level} MP."
        },
        {
            "item": "At the end of each round, {target} that performed the {actions} Action are dealt {threats.damage.level} damage."
        },
        {
            "item": "At the end of each round, {target} that performed the {actions} or {actions} Actions are dealt {threats.damage.level} damage."
        },
        {
            "item": "At the end of each round, {target} that performed the {actions} Action are dealt {threats.damage.level} damage and become {statusEffects}."
        },
        {
            "item": "Whenever an action deals {element} damage, {target} become {statusEffects}."
        },
        {
            "item": "Whenever an action deals {element} damage, {target} are dealt {threats.damage.level} {element} damage."
        }
    ]
}